<Project Sdk="Microsoft.NET.Sdk">
  <!--Property-->
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net8.0</TargetFrameworks>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <Using Include="System" />
    <Using Include="System.Runtime.InteropServices" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release_MeshExport|netstandard2.0|AnyCPU'">
    <Optimize>True</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release_MeshExport|net8.0|AnyCPU'">
    <Optimize>True</Optimize>
  </PropertyGroup>

  <!--Package-->
  <PropertyGroup Condition="$(Configuration.Contains('MeshExport'))">
    <PackageId>ManifoldNET.MeshIO</PackageId>
  </PropertyGroup>
  <PropertyGroup>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageProjectUrl>https://github.com/elalish/manifold</PackageProjectUrl>
    <PackageReadmeFile>Readme.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/elalish/manifold</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>manifold;mesh;mesh booloperation;geometry library;topological;</PackageTags>
    <Description>Geometry library for topological robustness.</Description>
    <PackageIcon>icon.png</PackageIcon>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\Readme.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="4.4.0" />
  </ItemGroup>

  <PropertyGroup>
    <_IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</_IsWindows>
    <_IsMacOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</_IsMacOS>
    <_IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</_IsLinux>
    <ImplicitUsings>disable</ImplicitUsings>
  </PropertyGroup>
  <ItemGroup Condition="$(Configuration.Contains('MeshExport'))">
    <Content Include="build\net40\ManifoldNET.MeshIO.targets">
      <PackagePath>build/net40/ManifoldNET.MeshIO.targets</PackagePath>
      <Pack>true</Pack>
    </Content>
  </ItemGroup>
  <ItemGroup Condition="$(Configuration.Contains('MeshExport')) == 'false'">
    <Content Include="build\net40\ManifoldNET.targets">
      <PackagePath>build/net40/ManifoldNET.targets</PackagePath>
      <Pack>true</Pack>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Include="icon.png" Pack="true" PackagePath="\" />
    <Content Include="runtimes/win-x64/native/manifoldc.dll">
      <PackagePath>runtimes/win-x64/native</PackagePath>
      <Pack>true</Pack>
    </Content>
  </ItemGroup>

  <ItemGroup Condition="$(Configuration.Contains('MeshExport'))">
    <Content Include="runtimes/win-x64/native/assimp-vc143-mt.dll">
      <PackagePath>runtimes/win-x64/native</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes/win-x64/native/minizip.dll">
      <PackagePath>runtimes/win-x64/native</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes/win-x64/native/poly2tri.dll">
      <PackagePath>runtimes/win-x64/native</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes/win-x64/native/pugixml.dll">
      <PackagePath>runtimes/win-x64/native</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes/win-x64/native/zlib1.dll">
      <PackagePath>runtimes/win-x64/native</PackagePath>
      <Pack>true</Pack>
    </Content>
  </ItemGroup>

<!--  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="@echo off&#xD;&#xA;&#xD;&#xA;set source=$(ProjectDir)runtimes\win-x64\binary\$(Configuration)&#xD;&#xA;set destination=$(ProjectDir)runtimes\win-x64\native&#xD;&#xA;&#xD;&#xA;if not exist &quot;%25destination%25&quot; (&#xD;&#xA;    echo Directory not found: %25destination%25&#xD;&#xA;    md &quot;%25destination%25&quot;&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;del /q /f &quot;%25destination%25\*&quot;&#xD;&#xA;echo Clear directory: %25destination%25&#xD;&#xA;&#xD;&#xA;(robocopy %25source%25 %25destination%25 /MIR /NFL /NDL /R:0 /W:0) ^&amp; exit 0" />
  </Target>-->
</Project>
